[{"/Users/imingi/Documents/code/reactjs/movie_app/src/index.js":"1","/Users/imingi/Documents/code/reactjs/movie_app/src/App.js":"2","/Users/imingi/Documents/code/reactjs/movie_app/src/reportWebVitals.js":"3","/Users/imingi/Documents/code/reactjs/movie_app/src/potato.js":"4","/Users/imingi/Documents/code/reactjs/movie_app/src/movies.js":"5"},{"size":501,"mtime":1607174090815,"results":"6","hashOfConfig":"7"},{"size":1564,"mtime":1607349510620,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607171132328,"results":"9","hashOfConfig":"7"},{"size":101,"mtime":1607174139730,"results":"10","hashOfConfig":"11"},{"size":965,"mtime":1607352580840,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"r09xti",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z6gs5b",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/imingi/Documents/code/reactjs/movie_app/src/index.js",[],["26","27"],"/Users/imingi/Documents/code/reactjs/movie_app/src/App.js",["28","29"],"import logo from './logo.svg';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./movies.js\"\n\nfunction Food(props) {\n  console.log(props)\nreturn (<div><h3>foooood {props.name}<br /></h3><h3>flaaavor {props.fla}<br /></h3><span>and rating {props.rating} </span></div>);\n}\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movie: [],\n    \n  }\n\n  getMovies = async () => { \n    const {data: {data: {movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    console.log(movies);\n    this.setState({movies:movies, isLoading:false})\n  }\n\n  componentDidMount(){\n    this.getMovies();\n    \n  }\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        \n        <section className='container'>\n          {isLoading ? \n            <div className=\"loader\">\n              <span className=\"loater_text\">Loading...</span>\n            </div>: (\n            <div className=\"movies\">\n              {movies.map(movie => (\n              <Movie key={movie.id}\n              id={movie.id} \n              year={movie.year} \n              title={movie.title} \n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres} />\n              ))}\n            </div>)}\n        </section>\n        \n      </header>\n    </div>\n  );}\n}\n\nexport default App;\n","/Users/imingi/Documents/code/reactjs/movie_app/src/reportWebVitals.js",[],"/Users/imingi/Documents/code/reactjs/movie_app/src/potato.js",[],"/Users/imingi/Documents/code/reactjs/movie_app/src/movies.js",["30"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Movie({id,year,title,summary,poster, genres}) {\n    return (\n        <div className=\"movies_movie\">\n            <img src ={poster} className=\"movie_poster\" alt={title} />\n            <div className=\"movie_data\">\n                <h3 className=\"movie_title\">{title} <span class=\"movie_year\">({year})</span></h3>     \n                <div className=\"movie_genres\">{genres.map( (genre,index) => genre == genres[genres.length-1] ? genre: genre + ', ')}</div>\n                <p className=\"movie_summary\">{summary.slice(0,200)}...</p>\n                \n            </div>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":17},{"ruleId":"35","severity":1,"message":"39","line":8,"column":10,"nodeType":"37","messageId":"38","endLine":8,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":10,"column":83,"nodeType":"42","messageId":"43","endLine":10,"endColumn":85},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'Food' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]