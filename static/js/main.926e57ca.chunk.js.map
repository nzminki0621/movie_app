{"version":3,"sources":["logo.svg","movies.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","class","map","genre","index","length","slice","App","state","isLoading","movie","getMovies","a","axios","get","movies","data","console","log","setState","this","logo","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAAe,MAA0B,iC,yBC0B1BA,MAvBf,YAAuD,EAAvCC,GAAwC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAMC,EAAyB,EAAzBA,QAAQC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAU,eAAf,UACI,qBAAKC,IAAMH,EAAQE,UAAU,eAAeE,IAAKN,IACjD,sBAAKI,UAAU,aAAf,UACI,qBAAIA,UAAU,cAAd,UAA6BJ,EAA7B,IAAoC,uBAAMO,MAAM,aAAZ,cAA2BR,EAA3B,UACpC,qBAAKK,UAAU,eAAf,SAA+BD,EAAOK,KAAK,SAACC,EAAMC,GAAP,OAAiBD,GAASN,EAAOA,EAAOQ,OAAO,GAAKF,EAAOA,EAAQ,UAC9G,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQW,MAAM,EAAE,KAA9C,gB,ICiDDC,E,4MA9CbC,MAAQ,CACNC,WAAW,EACXC,MAAO,I,EAITC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,yDADvC,gBACWC,EADX,EACHC,KAAOA,KAAOD,OACrBE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAACJ,OAAOA,EAAQN,WAAU,IAH9B,2C,kEAOVW,KAAKT,c,+BAGG,IAAD,EACqBS,KAAKZ,MAA1BC,EADA,EACAA,UAAWM,EADX,EACWA,OAClB,OACA,qBAAKjB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKsB,EAAMvB,UAAU,WAAWE,IAAI,SAEzC,yBAASF,UAAU,YAAnB,SACGW,EACC,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAEF,qBAAKA,UAAU,SAAf,SACGiB,EAAOb,KAAI,SAAAQ,GAAK,OACjB,cAAC,EAAD,CACAlB,GAAIkB,EAAMlB,GACVC,KAAMiB,EAAMjB,KACZC,MAAOgB,EAAMhB,MACbC,QAASe,EAAMf,QACfC,OAAQc,EAAMY,mBACdzB,OAAQa,EAAMb,QANFa,EAAMlB,oB,GA/Bd+B,IAAMC,WCATC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.926e57ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Movie({id,year,title,summary,poster, genres}) {\n    return (\n        <div className=\"movies_movie\">\n            <img src ={poster} className=\"movie_poster\" alt={title} />\n            <div className=\"movie_data\">\n                <h3 className=\"movie_title\">{title} <span class=\"movie_year\">({year})</span></h3>     \n                <div className=\"movie_genres\">{genres.map( (genre,index) => genre == genres[genres.length-1] ? genre: genre + ', ')}</div>\n                <p className=\"movie_summary\">{summary.slice(0,200)}...</p>\n                \n            </div>\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default Movie;","import logo from './logo.svg';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./movies.js\"\n\nfunction Food(props) {\n  console.log(props)\nreturn (<div><h3>foooood {props.name}<br /></h3><h3>flaaavor {props.fla}<br /></h3><span>and rating {props.rating} </span></div>);\n}\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movie: [],\n    \n  }\n\n  getMovies = async () => { \n    const {data: {data: {movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    console.log(movies);\n    this.setState({movies:movies, isLoading:false})\n  }\n\n  componentDidMount(){\n    this.getMovies();\n    \n  }\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        \n        <section className='container'>\n          {isLoading ? \n            <div className=\"loader\">\n              <span className=\"loater_text\">Loading...</span>\n            </div>: (\n            <div className=\"movies\">\n              {movies.map(movie => (\n              <Movie key={movie.id}\n              id={movie.id} \n              year={movie.year} \n              title={movie.title} \n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres} />\n              ))}\n            </div>)}\n        </section>\n        \n      </header>\n    </div>\n  );}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}